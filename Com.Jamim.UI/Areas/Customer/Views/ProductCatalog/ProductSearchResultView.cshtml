@model ProductSearchResultView
@using Com.Jamim.Services.Customer.ViewModels
@using Com.Jamim.Controllers.Customer.ViewModels.ProductCatalog
@{
    ViewBag.Title = "ProductSearchResultView";
    Layout = "~/Areas/Customer/Views/Shared/_CatalogLayout.cshtml";
}


<style>
    .ptitle {
        font-size: 2em !important;
    }
</style>

@section menu{
    @Html.Partial("_CategoryPartial", Model.Categories)
}

@helper RenderProuct(IEnumerable<ProductView> products)
{
    <h2>@Model.SelectedCategoryName</h2>
    <hr />

    foreach (ProductView c in products)
    {

        @*<p>CategoryId:@c.CategoryId</p><br />
            <p>ImageSrc:@c.ImageSrc</p><br />
            <p>ListPrice:@c.ListPrice</p><br />
            <p> Manufacturer:@c.Manufacturer</p><br />
            <p> Name:@c.Name</p><br />
            <p> ProductId:@c.ProductId</p><br />
            <p> Rank:@c.Rank</p><br />
            <p> SellingPrice:@c.SellingPrice</p><br />
            <p> ShortDescription:@c.ShortDescription</p><br />
            <p> Weight:@c.Weight</p><br />
            <hr />*@

        <div class="col-xs-3" style=" padding-bottom:10px;">
            <div style="height:270px; " class="thumbnail">
                <img src="../../../Images/horlicks.jpg" />
                <div class="caption">
                    <h4 class="ptitle"><i class="fa fa-rupee">&nbsp;@c.SellingPrice&nbsp;|</i> @c.Name</h4>
                    <p>this is sample text about product.</p>
                    <p>

                        <button type="button" class="btn btn-sm btn-default"><i class="fa fa-chevron-down"></i></button>
                        <span class="cnt text-center" style="padding:5px;width:50px;">1</span>
                        <button type="button" class="btn btn-sm btn-circle btn-default"><i class="fa fa-chevron-up"></i></button>

                        <button class="btn btn-sm btn-primary pull-right"><i class="fa fa-shopping-cart"></i></button>

                    </p>
                </div>

            </div>
        </div>

    }
}

@section body{

    @foreach (RefinementGroup refineGroup in Model.RefinementGroups)
    {
        <p>@refineGroup.Name</p>
        foreach (Refinement refinement in refineGroup.Refinements)
        {
            <input type="checkbox" />@refinement.Name<br />
        }
    }

    <div class="row">
        @RenderProuct(Model.Products)
    </div>

}


<script type="text/javascript">

    //Array to store refinements made by user.
    var refinementSelection = [];

    //Flag to stop user selection while page is loading
    var disallowUpdate = false;

    //Vars to store data on the last refinement selections.
    var lastSelectedRefinementItemId;
    var lastSelectedRefinementGroupId;

    //Flag to show if last action was a narrowing or criteria widening selection.
    var lastActionWasToNarrowProductRefinement = false;

    //Ready function
    $(function () {
        $("#ddlSortBy").on("change", function () {
            if (disallowUpdate == false)
                displayPage(1);
        });

        // TODO::
    });

    function dispalyPage(index) {
        if (disallowUpdate == false) {

            var categoryId = $('#hdnCategoryId').val();
            var sortBy = $("#ddlSortBy").val();

            getProducts(index, categoryId, sortBy);

        }
    }

    function refineSearch(refinementGroupId, refinementItemId) {
        if (disallowUpdate == false) {
            itemRefinementElementId = buildRefinementItemElementIdFrom(refinementGroupId, refinementItemId);

            lastSelectedRefinementGroupId = refinementGroupId;
            lastSelectedRefinementItemId = refinementItemId;

            if (!isDisabled(itemRefinementElementId)) {
                if (isAvailable(itemRefinementElementId)) {

                }
            }
        }
    }

    function getProducts(index, categoryId, sortBy) {

    }

    function filterOutRefinements(refinementGroupId, availableProductRefinements) {

    }

    function showNoProductFoundDialogBoxAndRevertSelection() {

    }

    function findRefinementIdFrom(itemRefinementElementId) {

    }

</script>


